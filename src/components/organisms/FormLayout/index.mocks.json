{
  "testing": {
    "minimalConfig": {
      "inputs": {
        "email": {
          "label": "Email",
          "type": "email",
          "control": "email",
          "isRequired": false,
          "isVisible": true
        },
        "password": {
          "label": "Password",
          "type": "password",
          "control": "password",
          "isRequired": false,
          "isVisible": true
        }
      }
    },
    "withButtons": {
      "formButtons": [
        {
          "type": "submit",
          "color": "success",
          "label": "Log in"
        },
        {
          "type": "button",
          "color": "danger",
          "label": "Or you can Sign up"
        }
      ]
    },
    "withErrors": {
      "errors": {
        "graphQLErrors": [
          {
            "message": "This is a test message, just the first idea of how to work it"
          }
        ]
      }
    }
  },
  "storybook": {
    "isLoading": {
      "description": "Adds a spinner on the form and disable the screen (to avoid additional user behavior with the inputs)"
    },
    "isBoxed": {
      "description": "Sets the form container as a box (differentiating it from the screen)"
    },
    "errors": {
      "description": "Display an array of error objects that will be displayed in a `Message` component"
    },
    "inputs": {
      "description": "*Required*. Set of inputs (in a configuration object) that will be parsed and displayed in the form according its provided configuration as `FormInput`"
    },
    "dividers": {
      "table": {
        "type": {
          "summary": "Divider[]"
        }
      },
      "description": ""
    },
    "formButtons": {
      "table": {
        "type": {
          "summary": "BasicButton[]"
        }
      },
      "description": "Array of `BasicButtons` objects that will be displayed in a `ButtonGroup` component below the parsed `inputs`"
    },
    "onFormSubmit": {
      "description": "Function that will execute custom code once the form is submited (by pressing enter in any input or clicking on the designated submit button)"
    },
    "onInputBlurChange": {
      "description": "Function that will execute custom code on each time the user changes focus from any input, returning input's data"
    }
  }
}
